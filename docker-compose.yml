# Docker Compose for Tyaprover Deployment
# Generated by Copilot

version: '3.8'

services:
  tyaprover:
    build:
      context: .
      dockerfile: dockerfile-captain.release
    image: tyaprover:custom
    container_name: tyaprover-captain
    ports:
      - "80:80"
      - "443:443"
      - "3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - captain-data:/captain
    environment:
      - ACCEPTED_TERMS=true
      - CAPTAIN_ROOT_DOMAIN=captain.toowired.win
      - CAPTAIN_IS_DEBUG=false
    restart: unless-stopped
    networks:
      - tyaprover-network

  postgresql:
    image: postgres:15-alpine
    container_name: tyaprover-postgres
    environment:
      - POSTGRES_DB=tyaprover
      - POSTGRES_USER=tyaprover
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    secrets:
      - postgres_password
    restart: unless-stopped
    networks:
      - tyaprover-network

  redis:
    image: redis:7-alpine
    container_name: tyaprover-redis
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - tyaprover-network

  backup:
    image: alpine:latest
    container_name: tyaprover-backup
    volumes:
      - captain-data:/captain:ro
      - postgres-data:/postgres-data:ro
      - /home/toowired/backups/tyaprover:/backups
      - ./backup-scripts:/scripts:ro
    command: /scripts/backup.sh
    restart: "no"
    networks:
      - tyaprover-network

volumes:
  captain-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  tyaprover-network:
    driver: bridge

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt

# Generated by Copilot
